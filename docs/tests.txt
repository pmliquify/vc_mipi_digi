Test:
1. Was kommt beim Empfang direkt an?
2. Was passiert, wenn man die Formate des ISI aif z.B. RGB stellt?
3. Was macht der CSI Baustein?


LITEND img.org (fmt: RG10, dx: 1920, dy: 1080, pitch: 3840) - 7c02 4f02 7302 4602 7d02 3802 7f02 6702 7a02 4e02

DUNKEL img.org (fmt: RG10, dx: 1920, dy: 1080, pitch: 3840) - 0068 0064 0067 0064 0065 0063 0067 0064 0065 0064
       NANO DEC                                               xxxx xx00 0100 0100
                                                              xxxx xx00 0100 0000
                                                              xxxx xx00 0100 0011

       img.org (fmt: RG10, dx: 1920, dy: 1080, pitch: 3840) - 007c 0048 0088 004c 0078 004c 0080 0050 0078 0050
       DIGI HEX                                               xxxx xx00 0111 1100
                                                              xxxx xx00 0100 1000
                                                              xxxx xx00 1000 1000
                                                              xxxx xx00 0100 1100

HELL   img.org (fmt: RG10, dx: 1920, dy: 1080, pitch: 3840) - 1023 1023 1023 1023 1023 1023 1023 1023 1023 1023 
       NANO DEC                                               xxxx xx11 1111 1111
       img.org (fmt: RG10, dx: 1920, dy: 1080, pitch: 3840) - 00fc 00fc 00fc 00fc 00fc 00fc 00fc 00fc 00fc 00fc
       DIGI HEX                                               xxxx xx00 1111 1100

ROT    img.org (fmt: RG10, dx: 1920, dy: 1080, pitch: 3840) - 0175 0136 0176 0139 0169 0129 0173 0137 0173 0142
GRUN   img.org (fmt: RG10, dx: 1920, dy: 1080, pitch: 3840) - 0107 0103 0109 0111 0107 0107 0114 0107 0105 0104 


// *** VC MIPI ********************************************************
// val |= MXC_ISI_OUT_FMT_RGBA32 << CHNL_IMG_CTRL_FORMAT_OFFSET;	// 00ff 0000
// val |= MXC_ISI_OUT_FMT_ABGR32 << CHNL_IMG_CTRL_FORMAT_OFFSET;	// 0000 ff00
// val |= MXC_ISI_OUT_FMT_A2RGB10 << CHNL_IMG_CTRL_FORMAT_OFFSET;	//    f    c    0    3 0000
                                                               // 1111 1100 0000 0011
// val |= MXC_ISI_OUT_FMT_YUV444_1P10 << CHNL_IMG_CTRL_FORMAT_OFFSET;	// 0000 0000 00ff
// val |= MXC_ISI_OUT_FMT_YUV444_1P10P << CHNL_IMG_CTRL_FORMAT_OFFSET;	// 0000 c03f

// ================================================================================================================
// val |= MXC_ISI_OUT_FMT_RAW8 << CHNL_IMG_CTRL_FORMAT_OFFSET;		
                                                               // .... ..98 7654 3210 .... ..98 7654 3210
                                                               //                ^-------^           ^---
                                                               //                7654 3210           7654
                                                               //    f    0    f    0
                                                               // 1111 0000 1111 0000
                                                               // 3210      3210
// ----------------------------------------------------------------------------------------------------------------
// val |= MXC_ISI_OUT_FMT_RAW10 << CHNL_IMG_CTRL_FORMAT_OFFSET;
                                                               // .... ..98 7654 3210 .... ..98 7654 3210
                                                               //             ^----------^ 0000 00
                                                                             //             98 7654 3210 
                                                               //    0    0    f    c 
                                                               // 0000 0000 1111 1100 0000 0000 1111 1100
                                                               //           5432 10             5432 10
// ----------------------------------------------------------------------------------------------------------------
// val |= MXC_ISI_OUT_FMT_RAW12 << CHNL_IMG_CTRL_FORMAT_OFFSET;
                                                               // .... ..98 7654 3210 .... ..98 7654 3210
                                                               //           ^------------^ 0000
                                                               //           ba98 7654 3210 
                                                               //    0    0    f    f
                                                               // 0000 0000 1111 1111 0000 0000 1111 1111
                                                               //           7654 3210           7654 3210
// ----------------------------------------------------------------------------------------------------------------
val |= MXC_ISI_OUT_FMT_RAW16 << CHNL_IMG_CTRL_FORMAT_OFFSET;
                                                               // .... ..98 7654 3210 .... ..98 7654 3210
                                                               //                ^-----------------^
                                                               //                fedc ba98 7654 3210 
                                                               //    f    0    3    f
                                                               // 1111 0000 0011 1111 1111 0000 0011 1111
                                                               // 3210        98 7654 3210        98 7654
// ================================================================================================================
dev_dbg(dev, "%s(): dst_fmt->color: 0x%08x (%u)\n", __FUNCTION__, dst_fmt->color, dst_fmt->color);
// ****************************************************************************************